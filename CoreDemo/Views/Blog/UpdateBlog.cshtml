@model EntityLayer.Concrete.Blog

@{
    ViewData["Title"] = "UpdateBlog";
    Layout = "~/Views/Shared/WriterLayout.cshtml";
}

<h1>Bloğu düzenle</h1>

@using (Html.BeginForm("UpdateBlog", "Blog", FormMethod.Post))
{
    @Html.Label("Blog başlığı")
    @Html.TextBoxFor(x => x.BlogTitle, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.BlogTitle)
    <br />
    @Html.Label("Blog görseli")
    @Html.TextBoxFor(x => x.BlogImage, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.BlogImage)
    <br />
    @Html.Label("Blog küçük görsel")
    @Html.TextBoxFor(x => x.BlogThambnailImage, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.BlogThambnailImage)
    <br />
    @Html.Label("Blog kategori")
    @Html.DropDownListFor(x => x.CategoryID, (List<SelectListItem>)ViewBag.CategoryValues, new { @class = "form-control" })
    <br />
    @Html.Label("Blog içerik")
    @Html.TextAreaFor(x => x.BlogContent, 3, 10, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.BlogContent)
    <br />
    @Html.HiddenFor(x => x.BlogCreateDate)
    @Html.HiddenFor(x => x.CategoryID)
    @Html.HiddenFor(x => x.WriterID)
    @Html.HiddenFor(x => x.BlogID)
    @Html.HiddenFor(x => x.BlogStatus)
    <button class="btn btn-success">Bloğu Güncelle</button>
}
